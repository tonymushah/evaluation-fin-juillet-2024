// @generated by protobuf-ts 2.9.4 with parameter server_none
// @generated from protobuf file "admin.proto" (package "mg.tonymushah.evalfjuil24.admin", syntax proto3)
// tslint:disable
import { HelloService } from "./admin";
import type { HelloResponse } from "./admin";
import type { HelloRequest } from "./admin";
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Database } from "./admin";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { Empty } from "./admin";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service mg.tonymushah.evalfjuil24.admin.Database
 */
export interface IDatabaseClient {
    /**
     * @generated from protobuf rpc: Reset(mg.tonymushah.evalfjuil24.admin.Empty) returns (mg.tonymushah.evalfjuil24.admin.Empty);
     */
    reset(input: Empty, options?: RpcOptions): UnaryCall<Empty, Empty>;
}
/**
 * @generated from protobuf service mg.tonymushah.evalfjuil24.admin.Database
 */
export class DatabaseClient implements IDatabaseClient, ServiceInfo {
    typeName = Database.typeName;
    methods = Database.methods;
    options = Database.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Reset(mg.tonymushah.evalfjuil24.admin.Empty) returns (mg.tonymushah.evalfjuil24.admin.Empty);
     */
    reset(input: Empty, options?: RpcOptions): UnaryCall<Empty, Empty> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, Empty>("unary", this._transport, method, opt, input);
    }
}
/**
 * @generated from protobuf service mg.tonymushah.evalfjuil24.admin.HelloService
 */
export interface IHelloServiceClient {
    /**
     * @generated from protobuf rpc: Say(mg.tonymushah.evalfjuil24.admin.HelloRequest) returns (mg.tonymushah.evalfjuil24.admin.HelloResponse);
     */
    say(input: HelloRequest, options?: RpcOptions): UnaryCall<HelloRequest, HelloResponse>;
}
/**
 * @generated from protobuf service mg.tonymushah.evalfjuil24.admin.HelloService
 */
export class HelloServiceClient implements IHelloServiceClient, ServiceInfo {
    typeName = HelloService.typeName;
    methods = HelloService.methods;
    options = HelloService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Say(mg.tonymushah.evalfjuil24.admin.HelloRequest) returns (mg.tonymushah.evalfjuil24.admin.HelloResponse);
     */
    say(input: HelloRequest, options?: RpcOptions): UnaryCall<HelloRequest, HelloResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<HelloRequest, HelloResponse>("unary", this._transport, method, opt, input);
    }
}
