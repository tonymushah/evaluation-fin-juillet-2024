syntax = "proto3";

option optimize_for = CODE_SIZE;

package mg.tonymushah.evalfjuil24.admin;

import "commons.proto";

service Database {
    rpc Reset(mg.tonymushah.evalfjuil24.Empty) returns (mg.tonymushah.evalfjuil24.Empty);
}

message HelloRequest {
    string content = 1;
}

message HelloResponse {
    string message = 1;
}

service HelloService {
    rpc Say(HelloRequest) returns (HelloResponse);
}

message EtudiantsListRequest {
    repeated string promotion = 1;
    optional string nom = 2;
    optional uint32 offset = 3;
    optional uint32 limit = 4; 
}

message EtudiantsListResponse {
    repeated mg.tonymushah.evalfjuil24.Etudiant list = 1;
    uint32 offset = 2;
    uint32 limit = 3;
    uint64 total = 4;
}

message EtudiantInfoRequest {
    string numero = 1;
}

message EtudiantInfoResponse {
    mg.tonymushah.evalfjuil24.Etudiant current = 1;
}

message EtudiantReleveNoteRequest {
    string etudiant = 1;
    repeated uint32 semestre = 2;
}

message EtudiantReleveNoteResponse {
    repeated mg.tonymushah.evalfjuil24.ReleveNote releves = 1;
}

service Etudiants {
    rpc List(EtudiantsListRequest) returns (EtudiantsListResponse);
    rpc Info(EtudiantInfoRequest) returns (EtudiantInfoResponse);
    rpc ReleveNote(EtudiantReleveNoteRequest) returns (EtudiantReleveNoteResponse);
}

message InsertNotesRequest {
    string etudiant = 1;
    string matiere = 2;
    uint32 note = 3;
    string req_id = 4;
}

message InsertNotesResponse {
    string custom_message = 1;
    string req_id = 5;
}

service Notes {
    rpc Insert(stream InsertNotesRequest) returns (stream InsertNotesResponse);
}

message Semestre {
    uint32 numero = 1;
}

message GetSemetresRequest {

}

message GetSemetresResponse {
    repeated Semestre semestre = 1;
}

message GetMatieresRequest {
    optional uint32 offset = 1;
    optional uint32 limit = 2;
    repeated uint32 semstres = 3;
}

message GetMatieresResponse {
    repeated mg.tonymushah.evalfjuil24.Matiere matieres = 1;
    uint32 offset = 2;
    uint32 limit = 3;
    uint64 total = 4;
}

message GetPromotionsRequest {
    
}

message GetPromotionsResponse {
    repeated string promotions = 1;
}

service Getters {
    rpc Semetres(GetSemetresRequest) returns (GetSemetresResponse);
    rpc Matieres(GetMatieresRequest) returns (GetMatieresResponse);
    rpc Promotions(GetPromotionsRequest) returns (GetPromotionsResponse);
}

message LoginRequest{
    string username = 1;
    string password = 2;
}

message LoginResponse {
    string token = 1;
}

service Auth {
    rpc Login(LoginRequest) returns (LoginResponse);
}
